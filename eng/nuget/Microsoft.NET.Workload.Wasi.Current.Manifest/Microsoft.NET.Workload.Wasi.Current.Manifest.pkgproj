<Project DefaultTargets="Build">
  <Import Project="$(RepoRoot)\Directory.Build.props" />
  <Import Project="..\packaging.props" />

  <PropertyGroup>
    <PackageDescription>Internal toolchain package not meant for direct consumption. Please do not reference directly.</PackageDescription>
    <Description>Internal toolchain package not meant for direct consumption. Please do not reference directly.</Description>
  </PropertyGroup>

  <PropertyGroup Condition="'$(IsUnversionedManifest)' == 'true'">
    <IsShipping>false</IsShipping>
    <WorkloadVersionSuffix>.Transport</WorkloadVersionSuffix>
  </PropertyGroup>

  <Target Name="_PrepareForPack" BeforeTargets="GetPackageFiles" Returns="@(PackageFile)">
    <!-- Override the id to include the sdk band as per the workload installer spec -->
    <PropertyGroup>
      <Id>Microsoft.NET.Workload.Wasi.Current.Manifest-%(WorkloadSdkBandVersions.Identity)$(WorkloadVersionSuffix)</Id>
    </PropertyGroup>

    <PropertyGroup>
      <WorkloadManifestPath>$(IntermediateOutputPath)WorkloadManifest.json</WorkloadManifestPath>
    </PropertyGroup>

    <ItemGroup>
      <PackageFile Include="$(WorkloadManifestPath)" TargetPath="data" />
      <PackageFile Include="WorkloadManifest.targets" TargetPath="data" />
    </ItemGroup>
  </Target>

  <!-- Running this target ensures we have the fully evaluated PackageVersion -->
  <Target Name="_WriteManifestValues" AfterTargets="CalculatePackageVersion">
    <PropertyGroup>
      <PackagePathVersion>PackageVersion=$(PackageVersion);</PackagePathVersion>
    </PropertyGroup>

    <ItemGroup>
      <_WorkloadManifestValues Include="WorkloadVersion" Value="$(PackageVersion)" />
      <_WorkloadManifestValues Include="PackageVersion" Value="$(PackageVersion)" />
      <_WorkloadManifestValues Include="WasiVersion" Value="$(WasiVersion)" />
    </ItemGroup>

    <GenerateFileFromTemplate
      TemplateFile="WorkloadManifest.json.in"
      Properties="@(_WorkloadManifestValues->'%(Identity)=%(Value)')"
      OutputPath="$(WorkloadManifestPath)" />
  </Target>

  <Import Project="$(NuGetPackageRoot)\microsoft.dotnet.build.tasks.packaging\$(MicrosoftDotNetBuildTasksPackagingVersion)\build\Microsoft.DotNet.Build.Tasks.Packaging.targets" />
  <Import Project="$([MSBuild]::GetPathOfFileAbove(Directory.Build.targets))" />
  <Import Project="$(RepoRoot)\Directory.Build.targets" />
</Project>
